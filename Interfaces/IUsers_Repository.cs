
using mpc_dotnetc_user_server.Models.Report;
using mpc_dotnetc_user_server.Models.Users.Account_Groups;
using mpc_dotnetc_user_server.Models.Users.Account_Roles;
using mpc_dotnetc_user_server.Models.Users.Authentication.Login.Email;
using mpc_dotnetc_user_server.Models.Users.Authentication.Login.TimeStamps;
using mpc_dotnetc_user_server.Models.Users.Authentication.Login.Twitch;
using mpc_dotnetc_user_server.Models.Users.Authentication.Logout;
using mpc_dotnetc_user_server.Models.Users.Authentication.Register.Email_Address;
using mpc_dotnetc_user_server.Models.Users.Authentication.JWT;
using mpc_dotnetc_user_server.Models.Users.Feedback;
using mpc_dotnetc_user_server.Models.Users.Identity;
using mpc_dotnetc_user_server.Models.Users.Selected.Alignment;
using mpc_dotnetc_user_server.Models.Users.Selected.Avatar;
using mpc_dotnetc_user_server.Models.Users.Selected.Deactivate;
using mpc_dotnetc_user_server.Models.Users.Selected.Language;
using mpc_dotnetc_user_server.Models.Users.Selected.Name;
using mpc_dotnetc_user_server.Models.Users.Selected.Navbar_Lock;
using mpc_dotnetc_user_server.Models.Users.Selected.Password_Change;
using mpc_dotnetc_user_server.Models.Users.Selected.Status;
using mpc_dotnetc_user_server.Models.Users.Selection;
using mpc_dotnetc_user_server.Models.Users.WebSocket_Chat;

namespace mpc_dotnetc_user_server.Interfaces
{
    public interface IUsers_Repository
    {
        Task<string> Create_Reported_WebSocket_Records(Reported_WebSocketDTO dto);
        Task<bool> Create_Comment_Box_Record(Comment_BoxDTO dto);
        Task<bool> Create_Broken_Link_Record(Reported_Broken_LinkDTO dto);
        Task<bool> Create_Discord_Bot_Bug_Record(Reported_Discord_Bot_BugDTO dto);
        Task<string> Create_WebSocket_Log_Record(WebSocket_Chat_PermissionDTO dto);
        Task<bool> Create_Website_Bug_Record(Reported_Website_BugDTO dto);
        Task<bool> Create_End_User_Status_Record(Selected_StatusDTO dto);
        Task<string> Update_End_User_Account_Roles(Account_RolesDTO dto);
        Task<string> Update_End_User_Account_Groups(Account_GroupsDTO dto);
        Task<bool> Create_Contact_Us_Record(Contact_UsDTO dto);
        Task<string> Create_Pending_Email_Registration_Record(Pending_Email_RegistrationDTO dto);
        Task<User_Data_DTO> Create_Account_By_Email(Complete_Email_RegistrationDTO dto);
        Task<User_Data_DTO> Integrate_Account_By_Email(Complete_Email_RegistrationDTO dto);
        Task Integrate_Account_By_Twitch(Complete_Twitch_RegisterationDTO dto);
        Task<User_Data_DTO> Create_Account_By_Twitch(Complete_Twitch_RegisterationDTO dto);
        Task<string> Create_Reported_User_Profile_Record(Reported_ProfileDTO dto);
        Task<string> Delete_Account_By_User_id(Delete_UserDTO dto);
        Task<string> Insert_End_User_Login_Time_Stamp_History(Login_Time_Stamp_HistoryDTO dto);
        Task<string> Insert_Report_Email_RegistrationTbl(Report_Email_RegistrationDTO dto);
        Task<User_Data_DTO> Read_User_Data_By_ID(ulong end_user_id);
        Task<string> Read_User_Profile_By_ID(ulong end_user_id);
        Task<string> Read_WebSocket_Permission_Record_For_Both_End_Users(WebSocket_Chat_PermissionDTO dto);
        Task<string> Read_All_End_User_WebSocket_Sent_Chat_Requests(ulong end_user_id);
        Task<string> Read_All_End_User_WebSocket_Sent_Chat_Blocks(ulong end_user_id);
        Task<string> Read_All_End_User_WebSocket_Sent_Chat_Approvals(ulong end_user_id);
        Task<string> Read_All_End_User_WebSocket_Received_Chat_Requests(ulong end_user_id);
        Task<string> Read_All_End_User_WebSocket_Received_Chat_Blocks(ulong end_user_id);
        Task<string> Read_All_End_User_WebSocket_Received_Chat_Approvals(ulong end_user_id);
        Task<byte> Read_End_User_Selected_Status(Selected_StatusDTO dto);
        Task<byte[]?> Read_User_Password_Hash_By_ID(ulong id);
        Task<ulong> Read_User_ID_By_Email_Address(string email_address);
        Task<string?> Read_User_Email_By_ID(ulong id);
        Task<string> Insert_Pending_Email_Registration_History_Record(Pending_Email_Registration_HistoryDTO dto);
        Task<string> Insert_Report_Failed_Email_Login_HistoryTbl(Report_Failed_Email_Login_HistoryDTO dto);
        Task<string> Insert_Report_Failed_Logout_HistoryTbl(Report_Failed_Logout_HistoryDTO dto);
        Task<string> Insert_Report_Failed_Unregistered_Email_Login_HistoryTbl(Report_Failed_Unregistered_Email_Login_HistoryDTO dto);
        Task<string> Insert_Report_Failed_Pending_Email_Registration_HistoryTbl(Report_Failed_Pending_Email_Registration_HistoryDTO dto);
        Task<string> Insert_Report_Failed_JWT_HistoryTbl(Report_Failed_JWT_HistoryDTO dto);
        Task<string> Insert_Report_Failed_User_Agent_HistoryTbl(Report_Failed_User_Agent_HistoryDTO dto);
        Task<string> Update_Pending_Email_Registration_Record(Pending_Email_RegistrationDTO dto);
        Task<string> Update_End_User_Avatar(Selected_AvatarDTO dto);
        Task<string> Update_End_User_Avatar_Title(Selected_Avatar_TitleDTO dto);
        Task<string> Update_End_User_Name(Selected_NameDTO dto);
        Task<string> Update_End_User_Login_Time_Stamp(Login_Time_StampDTO dto);
        Task<string> Update_End_User_Logout(Logout_Time_StampDTO dto);
        Task<string> Insert_End_User_Logout_HistoryTbl(Logout_Time_StampDTO dto);
        Task<string> Insert_Report_Failed_Selected_HistoryTbl(Report_Failed_Selected_HistoryDTO dto);
        Task<string> Update_End_User_Selected_Alignment(Selected_App_AlignmentDTO dto);
        Task<string> Update_End_User_Selected_TextAlignment(Selected_App_Text_AlignmentDTO dto);
        Task<string> Update_End_User_Selected_Language(Selected_LanguageDTO dto);
        Task<string> Update_End_User_Selected_Nav_Lock(Selected_Navbar_LockDTO dto);
        Task<string> Update_End_User_Selected_Status(Selected_StatusDTO dto);
        Task<string> Update_End_User_Selected_Theme(Selected_ThemeDTO dto);
        Task<string> Update_End_User_Selected_Grid_Type(Selected_App_Grid_TypeDTO dto);
        Task<string> Update_End_User_First_Name(IdentityDTO dto);
        Task<string> Update_End_User_Last_Name(IdentityDTO dto);
        Task<string> Update_End_User_Middle_Name(IdentityDTO dto);
        Task<string> Update_End_User_Maiden_Name(IdentityDTO dto);
        Task<string> Update_End_User_Ethnicity(IdentityDTO dto);
        Task<string> Update_End_User_Gender(IdentityDTO dto);
        Task<string> Update_End_User_Password(Password_ChangeDTO dto);
        Task<string> Update_Chat_Web_Socket_Permissions_Tbl(WebSocket_Chat_PermissionTbl dto);
        Task<string> Delete_Chat_Web_Socket_Permissions_Tbl(WebSocket_Chat_PermissionTbl dto);
        Task<string> Update_End_User_Birth_Date(IdentityDTO dto);
        Task<string> Update_End_User_Card_Border_Color(Selected_App_Custom_DesignDTO dto);
        Task<string> Update_End_User_Card_Header_Font(Selected_App_Custom_DesignDTO dto);
        Task<string> Update_End_User_Card_Body_Font(Selected_App_Custom_DesignDTO dto);
        Task<string> Update_End_User_Card_Footer_Font(Selected_App_Custom_DesignDTO dto);
        Task<string> Update_End_User_Navigation_Menu_Font(Selected_App_Custom_DesignDTO dto);
        Task<string> Update_End_User_Button_Font(Selected_App_Custom_DesignDTO dto);
        Task<string> Update_End_User_Card_Header_Font_Color(Selected_App_Custom_DesignDTO dto);
        Task<string> Update_End_User_Card_Body_Font_Color(Selected_App_Custom_DesignDTO dto);
        Task<string> Update_End_User_Card_Footer_Font_Color(Selected_App_Custom_DesignDTO dto);
        Task<string> Update_End_User_Navigation_Menu_Font_Color(Selected_App_Custom_DesignDTO dto);
        Task<string> Update_End_User_Button_Font_Color(Selected_App_Custom_DesignDTO dto);
        Task<string> Update_End_User_Card_Header_Background_Color(Selected_App_Custom_DesignDTO dto);
        Task<string> Update_End_User_Card_Body_Background_Color(Selected_App_Custom_DesignDTO dto);
        Task<string> Update_End_User_Card_Footer_Background_Color(Selected_App_Custom_DesignDTO dto);
        Task<string> Update_End_User_Navigation_Menu_Background_Color(Selected_App_Custom_DesignDTO dto);
        Task<string> Update_End_User_Button_Background_Color(Selected_App_Custom_DesignDTO dto);
        Task<string> Delete_End_User_Selected_App_Custom_Design(Selected_App_Custom_DesignDTO dto);
        Task<bool> Validate_Client_With_Server_Authorization(Report_Failed_Authorization_HistoryDTO dto);
        Task<string> Insert_Report_Failed_Client_ID_HistoryTbl(Report_Failed_Client_ID_HistoryDTO dto);
        Task Create_WebSocket_Permission_Record(WebSocket_Chat_PermissionDTO dto);
        Task<bool> Email_Exists_In_Pending_Email_RegistrationTbl(string email_address);
        Task<bool> Email_Exists_In_Login_Email_AddressTbl(string email_address);
        Task<bool> ID_Exists_In_Users_IDTbl(ulong id);
        Task<ulong> Read_User_ID_By_Twitch_Account_ID(ulong twitch_id);
        Task<ulong> Read_User_ID_By_Twitch_Account_Email(string twitch_email);
        Task<bool> Email_Exists_In_Twitch_Email_AddressTbl(string email_address);
        Task<bool> ID_Exists_In_Twitch_IDsTbl(ulong twitch_id);
        Task<ulong> Read_User_ID_By_Discord_Account_ID(ulong discord_id);
        Task<ulong> Read_User_ID_By_Discord_Account_Email(string discord_email);
        Task<bool> Email_Exists_In_Discord_Email_AddressTbl(string email_address);
        Task<bool> ID_Exists_In_Discord_IDsTbl(ulong discord_id);
        Task<User_Token_Data_DTO> Read_Require_Token_Data_By_ID(ulong end_user_id);

    }
}
